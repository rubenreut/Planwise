[0;34m🚀 Momentum Build & Deploy Script[0m
[0;34m=================================[0m
[0;34mUsing device ID: 00008027-001164121A62402E[0m
[0;34m📍 Finding build directory...[0m
[0;34mBuild directory: /Users/rubenreut/Library/Developer/Xcode/DerivedData/Momentum-brcqnsodfccmjcfvmfucnpkzzdnn/Build/Products[0m
[0;34m🧹 Cleaning...[0m
[0;32m✓ Clean completed (2s)[0m
[0;34m🔨 Building with parallel compilation...[0m
[0;34mBuild attempt 1 of 3...[0m
[0;31m✗ Build failed on attempt 1[0m
[1;33m⚠ Retrying build...[0m
[0;34mBuild attempt 2 of 3...[0m
[0;31m✗ Build failed on attempt 2[0m
[1;33m⚠ Retrying build...[0m
[0;34mBuild attempt 3 of 3...[0m
[0;31m✗ Build failed on attempt 3[0m
[0;31m✗ Build failed after 3 attempts[0m
eyJibHVlcHJpbnRfYmx1ZXByaW50SWRlbnRpZmllciI6IkQ1MzAzMzQ4MkUxNkIwQ0QwMEU4MzQxRiIsImJsdWVwcmludF9wcm92aWRlckZpbGVQYXRoU3RyaW5nIjoiXC9Vc2Vyc1wvcnViZW5yZXV0XC9Nb21lbnR1bVwvTW9tZW50dW1cL01vbWVudHVtLnhjb2RlcHJvaiIsInR5cGUiOnsiYmx1ZXByaW50Ijp7fX19
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:98:25: error: expected ')' in expression list
                        if abs(velocity) > velocityThreshold {
                        ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:67:21: note: to match this opening '('
            .gesture(
                    ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:119:13: error: expected declaration
            )
            ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:3:8: note: in declaration of 'DayView'
struct DayView: View {
       ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:141:9: error: expressions are not allowed at the top level
        .onAppear {
        ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:168:5: error: extraneous '}' at top level
    }
    ^
    
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:185:9: error: expressions are not allowed at the top level
        DispatchQueue.main.asyncAfter(deadline: .now() + animationDuration) {
        ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:191:5: error: extraneous '}' at top level
    }
    ^
    
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:199:9: error: expressions are not allowed at the top level
        DispatchQueue.main.asyncAfter(deadline: .now() + animationDuration) {
        ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:205:5: error: extraneous '}' at top level
    }
    ^
    
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:362:1: error: extraneous '}' at top level
}
^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitsView.swift:470:10: error: consecutive declarations on a line must be separated by ';'
        } else {
         ^
         ;
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitsView.swift:470:11: error: expected declaration
        } else {
          ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitsView.swift:345:8: note: in declaration of 'HabitRow'
struct HabitRow: View {
       ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitsView.swift:502:1: error: extraneous '}' at top level
}
^
/Users/rubenreut/Momentum/Momentum/Momentum/Extensions/View+CrashReporting.swift:48:14: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
        self.onChange(of: error.wrappedValue != nil) { hasError in
             ^
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/HabitManager.swift:675:10: warning: main actor-isolated instance method 'controllerDidChangeContent' cannot be used to satisfy nonisolated protocol requirement; this is an error in the Swift 6 language mode
    func controllerDidChangeContent(_ controller: NSFetchedResultsController<NSFetchRequestResult>) {
         ^
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/HabitManager.swift:675:10: note: add 'nonisolated' to 'controllerDidChangeContent' to make this instance method not isolated to the actor
    func controllerDidChangeContent(_ controller: NSFetchedResultsController<NSFetchRequestResult>) {
         ^
    nonisolated 
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/HabitManager.swift:674:25: note: add '@preconcurrency' to the 'NSFetchedResultsControllerDelegate' conformance to defer isolation checking to run time
extension HabitManager: NSFetchedResultsControllerDelegate {
                        ^
                        @preconcurrency 
CoreData.NSFetchedResultsControllerDelegate:23:19: note: 'controllerDidChangeContent' declared here
    optional func controllerDidChangeContent(_ controller: NSFetchedResultsController<any NSFetchRequestResult>)
                  ^
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/HabitManager.swift:320:13: warning: initialization of immutable value 'startOfDay' was never used; consider replacing with assignment to '_' or removing it
        let startOfDay = calendar.startOfDay(for: date)
        ~~~~^~~~~~~~~~
        _
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/HabitManager.swift:610:16: warning: value 'lastCompleted' was defined but never used; consider replacing with boolean test
        if let lastCompleted = habit.lastCompletedDate {
           ~~~~^~~~~~~~~~~~~~~~
                                                       != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/NotificationManager.swift:243:19: warning: immutable value 'eventId' was never used; consider replacing with '_' or removing it
              let eventId = UUID(uuidString: eventIdString),
              ~~~~^~~~~~~
              _
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/PersistenceController.swift:95:16: warning: value 'error' was defined but never used; consider replacing with boolean test
        if let error = loadError {
           ~~~~^~~~~~~~
                                 != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/PersistenceController.swift:261:20: warning: value 'error' was defined but never used; consider replacing with boolean test
            if let error = error {
               ~~~~^~~~~~~~
                                 != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/ScheduleManager.swift:634:21: warning: initialization of immutable value 'oldCount' was never used; consider replacing with assignment to '_' or removing it
                let oldCount = events.count
                ~~~~^~~~~~~~
                _
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/ScheduleManager.swift:641:21: warning: immutable value 'event' was never used; consider replacing with '_' or removing it
                for event in events {
                    ^~~~~
                    _
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/TaskManager.swift:354:10: warning: main actor-isolated instance method 'controllerDidChangeContent' cannot be used to satisfy nonisolated protocol requirement; this is an error in the Swift 6 language mode
    func controllerDidChangeContent(_ controller: NSFetchedResultsController<NSFetchRequestResult>) {
         ^
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/TaskManager.swift:354:10: note: add 'nonisolated' to 'controllerDidChangeContent' to make this instance method not isolated to the actor
    func controllerDidChangeContent(_ controller: NSFetchedResultsController<NSFetchRequestResult>) {
         ^
    nonisolated 
/Users/rubenreut/Momentum/Momentum/Momentum/Managers/TaskManager.swift:353:24: note: add '@preconcurrency' to the 'NSFetchedResultsControllerDelegate' conformance to defer isolation checking to run time
extension TaskManager: NSFetchedResultsControllerDelegate {
                       ^
                       @preconcurrency 
CoreData.NSFetchedResultsControllerDelegate:23:19: note: 'controllerDidChangeContent' declared here
    optional func controllerDidChangeContent(_ controller: NSFetchedResultsController<any NSFetchRequestResult>)
                  ^
/Users/rubenreut/Momentum/Momentum/Momentum/Mocks/MockPersistenceProvider.swift:72:17: warning: initialization of immutable value 'elapsed' was never used; consider replacing with assignment to '_' or removing it
            let elapsed = CFAbsoluteTimeGetCurrent() - startTime
            ~~~~^~~~~~~
            _
/Users/rubenreut/Momentum/Momentum/Momentum/Services/NetworkMonitor.swift:86:14: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
            .onChange(of: networkMonitor.isConnected) { isConnected in
             ^
/Users/rubenreut/Momentum/Momentum/Momentum/Services/OpenAIService.swift:401:24: warning: value 'errorString' was defined but never used; consider replacing with boolean test
                if let errorString = String(data: data, encoding: .utf8) {
                   ~~~~^~~~~~~~~~~~~~
                                                                         != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Services/OpenAIService.swift:455:14: warning: immutable value 'index' was never used; consider replacing with '_' or removing it
        for (index, message) in messages.enumerated() {
             ^~~~~
             _
/Users/rubenreut/Momentum/Momentum/Momentum/Services/OpenAIService.swift:457:28: warning: immutable value 'text' was never used; consider replacing with '_' or removing it
            case .text(let text): break
                       ~~~~^~~~
                       _
/Users/rubenreut/Momentum/Momentum/Momentum/Services/OpenAIService.swift:459:22: warning: immutable value 'itemIndex' was never used; consider replacing with '_' or removing it
                for (itemIndex, item) in array.enumerated() {
                     ^~~~~~~~~
                     _
/Users/rubenreut/Momentum/Momentum/Momentum/Services/OpenAIService.swift:466:37: warning: initialization of immutable value 'dataSize' was never used; consider replacing with assignment to '_' or removing it
                                let dataSize = url.count
                                ~~~~^~~~~~~~
                                _
/Users/rubenreut/Momentum/Momentum/Momentum/Services/OpenAIService.swift:714:24: warning: value 'debugDescription' was defined but never used; consider replacing with boolean test
                if let debugDescription = nsError.userInfo[NSDebugDescriptionErrorKey] {
                   ~~~~^~~~~~~~~~~~~~~~~~~
                                                                                       != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Utils/AnimationUtilities.swift:34:14: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
            .onChange(of: isCompleted) { newValue in
             ^
/Users/rubenreut/Momentum/Momentum/Momentum/Utils/AnimationUtilities.swift:111:10: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
        .onChange(of: isActive) { newValue in
         ^
/Users/rubenreut/Momentum/Momentum/Momentum/Utils/AnimationUtilities.swift:319:10: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
        .onChange(of: progress) { newValue in
         ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:102:13: warning: variable 'messageContent' was never mutated; consider changing to 'let' constant
        var messageContent = inputText
        ~~~ ^
        let
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:138:20: warning: value 'pdfName' was defined but never used; consider replacing with boolean test
            if let pdfName = pdfFileName {
               ~~~~^~~~~~~~~~
                                         != nil
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:172:23: warning: immutable value 'fileData' was never used; consider replacing with '_' or removing it
        } else if let fileData = selectedFileData,
                  ~~~~^~~~~~~~
                  _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:207:19: warning: value 'lastUserMessage' was defined but never used; consider replacing with boolean test
        guard let lastUserMessage = messages.last(where: { $0.sender.isUser }) else { return }
              ~~~~^~~~~~~~~~~~~~~~~~
                                                                               != nil
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:587:16: warning: value 'image' was defined but never used; consider replacing with boolean test
        if let image = combinedImage {
           ~~~~^~~~~~~~
                                     != nil
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:654:64: warning: 'recordPermission' was deprecated in iOS 17.0: Please use AVAudioApplication recordPermission
        let microphoneStatus = AVAudioSession.sharedInstance().recordPermission
                                                               ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:658:45: warning: 'requestRecordPermission' was deprecated in iOS 17.0: Please use AVAudioApplication requestRecordPermissionWithCompletionHandler
            AVAudioSession.sharedInstance().requestRecordPermission { granted in
                                            ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:822:39: warning: immutable value 'error' was never used; consider replacing with '_' or removing it
                    case .failure(let error):
                                  ~~~~^~~~~
                                  _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:867:43: warning: immutable value 'event' was never used; consider replacing with '_' or removing it
                        case .success(let event):
                                      ~~~~^~~~~
                                      _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:871:43: warning: immutable value 'error' was never used; consider replacing with '_' or removing it
                        case .failure(let error):
                                      ~~~~^~~~~
                                      _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:893:34: warning: immutable value 'eventId' was never used; consider replacing with '_' or removing it
        case .toggleComplete(let eventId):
                             ~~~~^~~~~~~
                             _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:945:17: warning: reference to captured var 'self' in concurrently-executing code; this is an error in the Swift 6 language mode
                self?.isRateLimited = false
                ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:946:17: warning: reference to captured var 'self' in concurrently-executing code; this is an error in the Swift 6 language mode
                self?.rateLimitResetTime = nil
                ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:1116:13: warning: initialization of immutable value 'model' was never used; consider replacing with assignment to '_' or removing it
        let model = hasImages ? "gpt-4o" : "gpt-4o-mini"
        ~~~~^~~~~
        _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:1832:13: warning: variable 'shouldUpdateCategory' was written to, but never read
        var shouldUpdateCategory = false
            ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2227:78: warning: string interpolation produces a debug description for an optional value; did you mean to make this explicit?
        let dateDescription = endDateStr != nil ? "from \(startDateStr) to \(endDateStr)" : "on \(startDateStr)"
                                                                             ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2227:78: note: use 'String(describing:)' to silence this warning
        let dateDescription = endDateStr != nil ? "from \(startDateStr) to \(endDateStr)" : "on \(startDateStr)"
                                                                             ^~~~~~~~~~
                                                                             String(describing:  )
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2227:78: note: provide a default value to avoid this warning
        let dateDescription = endDateStr != nil ? "from \(startDateStr) to \(endDateStr)" : "on \(startDateStr)"
                                                                             ^~~~~~~~~~
                                                                                        ?? <#default value#>
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2124:35: warning: immutable value 'error' was never used; consider replacing with '_' or removing it
                case .failure(let error):
                              ~~~~^~~~~
                              _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2211:31: warning: immutable value 'error' was never used; consider replacing with '_' or removing it
            case .failure(let error):
                          ~~~~^~~~~
                          _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2221:9: warning: no calls to throwing functions occur within 'try' expression
        try? await withCheckedContinuation { continuation in
        ^
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2403:17: warning: variable 'adjustedStartTime' was never mutated; consider changing to 'let' constant
            var adjustedStartTime = startTime
            ~~~ ^
            let
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:2671:27: warning: immutable value 'event' was never used; consider replacing with '_' or removing it
        case .success(let event):
                      ~~~~^~~~~
                      _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:3971:43: warning: cast from 'String.Element' (aka 'Character') to unrelated type 'String' always fails
                task.tags?.contains { ($0 as? String) == tag } ?? false
                                       ~~ ^   ~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:4041:37: warning: cast from 'String?' to unrelated type '[String]' always fails
            var newTags = task.tags as? [String] ?? []
                          ~~~~~~~~~ ^   ~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:4153:43: warning: cast from 'String.Element' (aka 'Character') to unrelated type 'String' always fails
                task.tags?.contains { ($0 as? String) == tag } ?? false
                                       ~~ ^   ~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:4210:13: warning: variable 'currentDate' was never mutated; consider changing to 'let' constant
        var currentDate = newDate
        ~~~ ^
        let
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/ChatViewModel.swift:6822:27: warning: value 'urlError' was defined but never used; consider replacing with boolean test
            } else if let urlError = error as? URLError {
                      ~~~~^~~~~~~~~~~      ~~~
                                           is
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/DayViewModel.swift:83:13: warning: initialization of immutable value 'allEvents' was never used; consider replacing with assignment to '_' or removing it
        let allEvents = scheduleManager.events
        ~~~~^~~~~~~~~
        _
/Users/rubenreut/Momentum/Momentum/Momentum/ViewModels/DayViewModel.swift:92:13: warning: immutable value 'event' was never used; consider replacing with '_' or removing it
        for event in events {
            ^~~~~
            _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/CategoryManagementView.swift:159:27: warning: immutable value 'error' was never used; consider replacing with '_' or removing it
        case .failure(let error): break
                      ~~~~^~~~~
                      _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayTimelineView.swift:94:25: warning: immutable value 'hour' was never used; consider replacing with '_' or removing it
            for (index, hour) in hours.enumerated() {
                        ^~~~
                        _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:143:13: error: cannot find 'viewModel' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
            ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:143:83: error: cannot find 'dayOffset' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
                                                                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:143:98: error: cannot find 'todayDate' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
                                                                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:143:112: error: cannot find 'todayDate' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
                                                                                                               ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:144:13: error: cannot find 'viewModel' in scope
            viewModel.refreshEvents()
            ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:147:23: error: cannot find 'dayOffset' in scope
        .onChange(of: dayOffset) { _, _ in
                      ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:148:13: error: cannot find 'viewModel' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
            ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:148:83: error: cannot find 'dayOffset' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
                                                                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:148:98: error: cannot find 'todayDate' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
                                                                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:148:112: error: cannot find 'todayDate' in scope
            viewModel.selectedDate = Calendar.current.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate
                                                                                                               ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:151:29: error: cannot find '$viewModel' in scope
        .sheet(isPresented: $viewModel.showingAddEvent) {
                            ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:156:22: error: cannot find '$viewModel' in scope
        .sheet(item: $viewModel.selectedEvent) { event in
                     ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:161:29: error: cannot find '$showingSettings' in scope
        .sheet(isPresented: $showingSettings) {
                            ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:141:10: error: cannot infer contextual base in reference to member 'onAppear'
        .onAppear {
        ~^~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:185:58: error: cannot find 'animationDuration' in scope
        DispatchQueue.main.asyncAfter(deadline: .now() + animationDuration) {
                                                         ^~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:186:13: error: cannot find 'dayOffset' in scope
            dayOffset += 1
            ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:187:13: error: cannot find 'dragOffset' in scope
            dragOffset = 0
            ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:189:13: error: cannot find 'isAnimatingSwipe' in scope
            isAnimatingSwipe = false
            ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:199:58: error: cannot find 'animationDuration' in scope
        DispatchQueue.main.asyncAfter(deadline: .now() + animationDuration) {
                                                         ^~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:200:13: error: cannot find 'dayOffset' in scope
            dayOffset -= 1
            ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:201:13: error: cannot find 'dragOffset' in scope
            dragOffset = 0
            ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:203:13: error: cannot find 'isAnimatingSwipe' in scope
            isAnimatingSwipe = false
            ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:98:32: error: cannot find 'velocity' in scope
                        if abs(velocity) > velocityThreshold {
                               ^~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:100:32: error: cannot find 'velocity' in scope
                            if velocity > 0 {
                               ^~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:101:65: error: cannot find 'screenWidth' in scope
                                swipeToPreviousDay(screenWidth: screenWidth)
                                                                ^~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:103:61: error: cannot find 'screenWidth' in scope
                                swipeToNextDay(screenWidth: screenWidth)
                                                            ^~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:105:53: error: cannot find 'screenWidth' in scope
                        } else if abs(dragOffset) > screenWidth * 0.3 {
                                                    ^~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:108:65: error: cannot find 'screenWidth' in scope
                                swipeToPreviousDay(screenWidth: screenWidth)
                                                                ^~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:110:61: error: cannot find 'screenWidth' in scope
                                swipeToNextDay(screenWidth: screenWidth)
                                                            ^~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:172:9: error: cannot find 'viewDates' in scope
        viewDates = [
        ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:173:50: error: cannot find 'dayOffset' in scope
            calendar.date(byAdding: .day, value: dayOffset - 1, to: todayDate) ?? todayDate,
                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:173:69: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset - 1, to: todayDate) ?? todayDate,
                                                                    ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:173:83: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset - 1, to: todayDate) ?? todayDate,
                                                                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:174:50: error: cannot find 'dayOffset' in scope
            calendar.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate,
                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:174:65: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate,
                                                                ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:174:79: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate,
                                                                              ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:175:50: error: cannot find 'dayOffset' in scope
            calendar.date(byAdding: .day, value: dayOffset + 1, to: todayDate) ?? todayDate
                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:175:69: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset + 1, to: todayDate) ?? todayDate
                                                                    ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:175:83: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset + 1, to: todayDate) ?? todayDate
                                                                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:180:9: error: cannot find 'isAnimatingSwipe' in scope
        isAnimatingSwipe = true
        ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:182:13: error: cannot find 'dragOffset' in scope
            dragOffset = -screenWidth
            ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:194:9: error: cannot find 'isAnimatingSwipe' in scope
        isAnimatingSwipe = true
        ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:196:13: error: cannot find 'dragOffset' in scope
            dragOffset = screenWidth
            ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:209:9: error: cannot find 'viewDates' in scope
        viewDates = [
        ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:210:50: error: cannot find 'dayOffset' in scope
            calendar.date(byAdding: .day, value: dayOffset - 1, to: todayDate) ?? todayDate,
                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:210:69: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset - 1, to: todayDate) ?? todayDate,
                                                                    ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:210:83: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset - 1, to: todayDate) ?? todayDate,
                                                                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:211:50: error: cannot find 'dayOffset' in scope
            calendar.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate,
                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:211:65: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate,
                                                                ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:211:79: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset, to: todayDate) ?? todayDate,
                                                                              ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:212:50: error: cannot find 'dayOffset' in scope
            calendar.date(byAdding: .day, value: dayOffset + 1, to: todayDate) ?? todayDate
                                                 ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:212:69: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset + 1, to: todayDate) ?? todayDate
                                                                    ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:212:83: error: cannot find 'todayDate' in scope
            calendar.date(byAdding: .day, value: dayOffset + 1, to: todayDate) ?? todayDate
                                                                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:219:72: error: cannot find 'dayOffset' in scope
            if let date = Calendar.current.date(byAdding: .day, value: dayOffset + offset, to: todayDate) {
                                                                       ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:219:96: error: cannot find 'todayDate' in scope
            if let date = Calendar.current.date(byAdding: .day, value: dayOffset + offset, to: todayDate) {
                                                                                               ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:223:9: error: cannot find 'dependencyContainer' in scope
        dependencyContainer.scheduleManager.preloadEvents(for: datesToPreload)
        ^~~~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:235:29: error: cannot find 'isAnimatingSwipe' in scope
                        if !isAnimatingSwipe {
                            ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:240:29: error: cannot find 'isAnimatingSwipe' in scope
                        if !isAnimatingSwipe {
                            ^~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:245:25: error: cannot find 'dayOffset' in scope
                        dayOffset = 0
                        ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:248:35: error: cannot find 'showingSettings' in scope
                    onSettings: { showingSettings = true },
                                  ^~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:249:35: error: cannot find 'viewModel' in scope
                    onAddEvent: { viewModel.showingAddEvent = true },
                                  ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:258:79: error: cannot find 'viewModel' in scope
                let isCurrentDay = Calendar.current.isDate(date, inSameDayAs: viewModel.selectedDate)
                                                                              ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:260:28: error: cannot find 'dependencyContainer' in scope
                    get: { dependencyContainer.scrollPositionManager.offset(for: 0, default: 612) },
                           ^~~~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:263:29: error: cannot find 'dependencyContainer' in scope
                            dependencyContainer.scrollPositionManager.update(dayOffset: 0, to: newValue)
                            ^~~~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:270:39: error: cannot find 'isDraggingTimeBlock' in scope
                    isScrollEnabled: !isDraggingTimeBlock
                                      ^~~~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:275:48: error: cannot find 'hourHeight' in scope
                                .frame(height: hourHeight)
                                               ^~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:297:26: error: cannot find 'dependencyContainer' in scope
            let events = dependencyContainer.scheduleManager.events(for: date)
                         ^~~~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:298:70: error: cannot find 'viewModel' in scope
            let isToday = Calendar.current.isDate(date, inSameDayAs: viewModel.selectedDate)
                                                                     ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:299:27: error: cannot find 'viewModel' in scope
            let layouts = viewModel.calculateEventLayout(for: events)
                          ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:300:56: error: cannot find 'timeColumnWidth' in scope
            let availableWidth = geometry.size.width - timeColumnWidth - rightPadding
                                                       ^~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:300:74: error: cannot find 'rightPadding' in scope
            let availableWidth = geometry.size.width - timeColumnWidth - rightPadding
                                                                         ^~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:308:29: error: cannot find 'viewModel' in scope
                            viewModel.handleEventTap(layout.event)
                            ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:311:41: error: cannot find '$isDraggingTimeBlock' in scope
                    isDraggingAnyBlock: $isDraggingTimeBlock
                                        ^~~~~~~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:318:24: error: cannot find 'timeColumnWidth' in scope
                    x: timeColumnWidth + calculateEventXOffset(layout: layout, availableWidth: availableWidth),
                       ^~~~~~~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:347:58: error: cannot find 'todayDate' in scope
        let currentStartOfDay = calendar.startOfDay(for: todayDate)
                                                         ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:354:9: error: cannot find 'dayOffset' in scope
        dayOffset = daysDifference
        ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:358:9: error: cannot find 'viewModel' in scope
        viewModel.selectedDate = targetStartOfDay
        ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/DayView.swift:359:9: error: cannot find 'viewModel' in scope
        viewModel.refreshEvents()
        ^~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/EventDetailView.swift:284:27: warning: immutable value 'error' was never used; consider replacing with '_' or removing it
        case .failure(let error):
                      ~~~~^~~~~
                      _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitCompletionButton.swift:112:30: warning: result of call to 'deleteEntry' is unused
                habitManager.deleteEntry(entry)
                             ^          ~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitCompletionButton.swift:127:41: warning: left side of nil coalescing operator '??' has non-optional type 'Double', so the right side is never used
                value: habit.goalTarget ?? 1.0,
                       ~~~~~~~~~~~~~~~~~^~~~~~
                                       
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitDetailView.swift:64:10: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
        .onChange(of: selectedPeriod) { _ in
         ^
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitDetailView.swift:428:21: warning: initialization of immutable value 'maxValue' was never used; consider replacing with assignment to '_' or removing it
                let maxValue = max(habit.goalTarget * 1.2, chartData.map(\.value).max() ?? 1)
                ~~~~^~~~~~~~
                _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitStatsView.swift:482:41: warning: initialization of immutable value 'missed' was never used; consider replacing with assignment to '_' or removing it
                                    let missed = total - completed - skipped
                                    ~~~~^~~~~~
                                    _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/HabitsView.swift:490:16: error: cannot find 'habit' in scope
        switch habit.trackingTypeEnum {
               ^~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/OnboardingViewPremium.swift:467:47: warning: result of call to 'purchase' is unused
                try await subscriptionManager.purchase(product)
                                              ^       ~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/PaywallView.swift:362:19: warning: value 'product' was defined but never used; consider replacing with boolean test
        guard let product = selectedProduct else { return "Select a Plan" }
              ~~~~^~~~~~~~~~
                                            != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Views/PaywallViewPremium.swift:185:47: warning: result of call to 'purchase' is unused
                try await subscriptionManager.purchase(product)
                                              ^       ~~~~~~~~~
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekView.swift:253:41: warning: left side of nil coalescing operator '??' has non-optional type 'Color', so the right side is never used
            return Color(hex: colorHex) ?? .accentColor
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
                                       
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekViewIPad.swift:70:37: warning: initialization of immutable value 'scrollOffset' was never used; consider replacing with assignment to '_' or removing it
                                let scrollOffset = max(0, CGFloat(currentHour - 2) * hourHeight)
                                ~~~~^~~~~~~~~~~~
                                _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekViewIPad.swift:329:24: warning: immutable value 'endTime' was never used; consider replacing with '_' or removing it
                   let endTime = event.endTime {
                   ~~~~^~~~~~~
                   _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekViewIPad.swift:614:19: warning: immutable value 'startTime' was never used; consider replacing with '_' or removing it
        guard let startTime = event.startTime,
              ~~~~^~~~~~~~~
              _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekViewIPad.swift:615:19: warning: immutable value 'endTime' was never used; consider replacing with '_' or removing it
              let endTime = event.endTime else { return }
              ~~~~^~~~~~~
              _
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekViewIPad.swift:644:20: warning: value 'startTime' was defined but never used; consider replacing with boolean test
            if let startTime = event.startTime {
               ~~~~^~~~~~~~~~~~
                                               != nil
/Users/rubenreut/Momentum/Momentum/Momentum/Views/WeekViewIPad.swift:653:20: warning: value 'endTime' was defined but never used; consider replacing with boolean test
            if let endTime = event.endTime {
               ~~~~^~~~~~~~~~
                                           != nil
/Users/rubenreut/Momentum/Momentum/Momentum/MomentumApp.swift:100:18: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
                .onChange(of: crashReportingEnabled) { newValue in
                 ^
/Users/rubenreut/Momentum/Momentum/Momentum/MomentumApp.swift:107:18: warning: 'onChange(of:perform:)' was deprecated in iOS 17.0: Use `onChange` with a two or zero parameter action closure instead.
                .onChange(of: analyticsEnabled) { newValue in
                 ^
eyJibHVlcHJpbnRfYmx1ZXByaW50SWRlbnRpZmllciI6IkQ1MzAzMzQ4MkUxNkIwQ0QwMEU4MzQxRiIsImJsdWVwcmludF9wcm92aWRlckZpbGVQYXRoU3RyaW5nIjoiXC9Vc2Vyc1wvcnViZW5yZXV0XC9Nb21lbnR1bVwvTW9tZW50dW1cL01vbWVudHVtLnhjb2RlcHJvaiIsInR5cGUiOnsiYmx1ZXByaW50Ijp7fX19
not on a macro expansion node: UnexpectedNodesSyntax
├─[0]: keyword(CompilerSwiftSyntax.Keyword.else)
├─[1]: leftBrace
├─[2]: keyword(CompilerSwiftSyntax.Keyword.let)
├─[3]: identifier("value")
├─[4]: colon
├─[5]: identifier("Double")
├─[6]: keyword(CompilerSwiftSyntax.Keyword.switch)
├─[7]: identifier("habit")
├─[8]: period
├─[9]: identifier("trackingTypeEnum")
├─[10]: leftBrace
├─[11]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[12]: period
├─[13]: identifier("binary")
├─[14]: colon
├─[15]: identifier("value")
├─[16]: equal
├─[17]: floatLiteral("1.0")
├─[18]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[19]: period
├─[20]: identifier("quantity")
├─[21]: comma
├─[22]: period
├─[23]: identifier("duration")
├─[24]: colon
├─[25]: identifier("value")
├─[26]: equal
├─[27]: identifier("habit")
├─[28]: period
├─[29]: identifier("goalTarget")
├─[30]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[31]: period
├─[32]: identifier("quality")
├─[33]: colon
├─[34]: identifier("value")
├─[35]: equal
├─[36]: floatLiteral("5.0")
├─[37]: rightBrace
├─[38]: identifier("onComplete")
├─[39]: leftParen
├─[40]: identifier("value")
├─[41]: rightParen
├─[42]: identifier("withAnimation")
├─[43]: leftParen
├─[44]: period
├─[45]: identifier("easeInOut")
├─[46]: leftParen
├─[47]: identifier("duration")
├─[48]: colon
├─[49]: floatLiteral("0.2")
├─[50]: rightParen
├─[51]: rightParen
├─[52]: leftBrace
├─[53]: identifier("isCompleted")
├─[54]: equal
├─[55]: keyword(CompilerSwiftSyntax.Keyword.true)
├─[56]: rightBrace
├─[57]: rightBrace
├─[58]: rightBrace
├─[59]: keyword(CompilerSwiftSyntax.Keyword.private)
├─[60]: keyword(CompilerSwiftSyntax.Keyword.func)
├─[61]: identifier("formatEntryValue")
├─[62]: leftParen
├─[63]: wildcard
├─[64]: identifier("entry")
├─[65]: colon
├─[66]: identifier("HabitEntry")
├─[67]: rightParen
├─[68]: arrow
├─[69]: identifier("String")
├─[70]: leftBrace
├─[71]: keyword(CompilerSwiftSyntax.Keyword.switch)
├─[72]: identifier("habit")
├─[73]: period
├─[74]: identifier("trackingTypeEnum")
├─[75]: leftBrace
├─[76]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[77]: period
├─[78]: identifier("quantity")
├─[79]: colon
├─[80]: keyword(CompilerSwiftSyntax.Keyword.return)
├─[81]: stringQuote
├─[82]: stringSegment("")
├─[83]: backslash
├─[84]: leftParen
├─[85]: identifier("Int")
├─[86]: leftParen
├─[87]: identifier("entry")
├─[88]: period
├─[89]: identifier("value")
├─[90]: rightParen
├─[91]: rightParen
├─[92]: stringSegment("")
├─[93]: stringQuote
├─[94]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[95]: period
├─[96]: identifier("duration")
├─[97]: colon
├─[98]: keyword(CompilerSwiftSyntax.Keyword.return)
├─[99]: stringQuote
├─[100]: stringSegment("")
├─[101]: backslash
├─[102]: leftParen
├─[103]: identifier("Int")
├─[104]: leftParen
├─[105]: identifier("entry")
├─[106]: period
├─[107]: identifier("value")
├─[108]: rightParen
├─[109]: rightParen
├─[110]: stringSegment(" min")
├─[111]: stringQuote
├─[112]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[113]: period
├─[114]: identifier("quality")
├─[115]: colon
├─[116]: keyword(CompilerSwiftSyntax.Keyword.let)
├─[117]: identifier("stars")
├─[118]: equal
├─[119]: identifier("Int")
├─[120]: leftParen
├─[121]: identifier("entry")
├─[122]: period
├─[123]: identifier("value")
├─[124]: rightParen
├─[125]: keyword(CompilerSwiftSyntax.Keyword.return)
├─[126]: identifier("String")
├─[127]: leftParen
├─[128]: identifier("repeating")
├─[129]: colon
├─[130]: stringQuote
├─[131]: stringSegment("★")
├─[132]: stringQuote
├─[133]: comma
├─[134]: identifier("count")
├─[135]: colon
├─[136]: identifier("stars")
├─[137]: rightParen
├─[138]: binaryOperator("+")
├─[139]: identifier("String")
├─[140]: leftParen
├─[141]: identifier("repeating")
├─[142]: colon
├─[143]: stringQuote
├─[144]: stringSegment("☆")
├─[145]: stringQuote
├─[146]: comma
├─[147]: identifier("count")
├─[148]: colon
├─[149]: integerLiteral("5")
├─[150]: binaryOperator("-")
├─[151]: identifier("stars")
├─[152]: rightParen
├─[153]: keyword(CompilerSwiftSyntax.Keyword.case)
├─[154]: period
├─[155]: identifier("binary")
├─[156]: colon
├─[157]: keyword(CompilerSwiftSyntax.Keyword.return)
├─[158]: stringQuote
├─[159]: stringSegment("✓")
├─[160]: stringQuote
├─[161]: rightBrace
├─[162]: rightBrace
├─[163]: rightBrace
├─[164]: keyword(CompilerSwiftSyntax.Keyword.struct)
├─[165]: identifier("EmptyHabitsView")
├─[166]: colon
├─[167]: identifier("View")
├─[168]: leftBrace
├─[169]: atSign
├─[170]: identifier("Environment")
├─[171]: leftParen
├─[172]: backslash
├─[173]: period
├─[174]: identifier("colorScheme")
├─[175]: rightParen
├─[176]: keyword(CompilerSwiftSyntax.Keyword.var)
├─[177]: identifier("colorScheme")
├─[178]: keyword(CompilerSwiftSyntax.Keyword.var)
├─[179]: identifier("body")
├─[180]: colon
├─[181]: identifier("some")
├─[182]: identifier("View")
├─[183]: leftBrace
├─[184]: identifier("VStack")
├─[185]: leftParen
├─[186]: identifier("spacing")
├─[187]: colon
├─[188]: integerLiteral("20")
├─[189]: rightParen
├─[190]: leftBrace
├─[191]: identifier("Image")
├─[192]: leftParen
├─[193]: identifier("systemName")
├─[194]: colon
├─[195]: stringQuote
├─[196]: stringSegment("sparkles")
├─[197]: stringQuote
├─[198]: rightParen
├─[199]: period
├─[200]: identifier("font")
├─[201]: leftParen
├─[202]: period
├─[203]: identifier("system")
├─[204]: leftParen
├─[205]: identifier("size")
├─[206]: colon
├─[207]: integerLiteral("50")
├─[208]: rightParen
├─[209]: rightParen
├─[210]: period
├─[211]: identifier("foregroundColor")
├─[212]: leftParen
├─[213]: period
├─[214]: identifier("blue")
├─[215]: period
├─[216]: identifier("opacity")
├─[217]: leftParen
├─[218]: floatLiteral("0.8")
├─[219]: rightParen
├─[220]: rightParen
├─[221]: identifier("Text")
├─[222]: leftParen
├─[223]: stringQuote
├─[224]: stringSegment("No habits for this day")
├─[225]: stringQuote
├─[226]: rightParen
├─[227]: period
├─[228]: identifier("font")
├─[229]: leftParen
├─[230]: period
├─[231]: identifier("headline")
├─[232]: rightParen
├─[233]: identifier("Text")
├─[234]: leftParen
├─[235]: stringQuote
├─[236]: stringSegment("Tap + to start building your routine")
├─[237]: stringQuote
├─[238]: rightParen
├─[239]: period
├─[240]: identifier("font")
├─[241]: leftParen
├─[242]: period
├─[243]: identifier("subheadline")
├─[244]: rightParen
├─[245]: period
├─[246]: identifier("foregroundColor")
├─[247]: leftParen
├─[248]: period
├─[249]: identifier("secondary")
├─[250]: rightParen
├─[251]: period
├─[252]: identifier("multilineTextAlignment")
├─[253]: leftParen
├─[254]: period
├─[255]: identifier("center")
├─[256]: rightParen
├─[257]: rightBrace
├─[258]: period
├─[259]: identifier("frame")
├─[260]: leftParen
├─[261]: identifier("maxWidth")
├─[262]: colon
├─[263]: period
├─[264]: identifier("infinity")
├─[265]: rightParen
├─[266]: rightBrace
├─[267]: rightBrace
├─[268]: pound
├─[269]: identifier("Preview")
├─[270]: leftBrace
├─[271]: identifier("HabitsView")
├─[272]: leftParen
├─[273]: rightParen
├─[274]: period
├─[275]: identifier("environmentObject")
├─[276]: leftParen
├─[277]: identifier("HabitManager")
├─[278]: period
├─[279]: identifier("shared")
├─[280]: rightParen
├─[281]: period
├─[282]: identifier("environmentObject")
├─[283]: leftParen
├─[284]: identifier("SubscriptionManager")
├─[285]: period
├─[286]: identifier("shared")
├─[287]: rightParen
╰─[288]: rightBrace
eyJibHVlcHJpbnRfYmx1ZXByaW50SWRlbnRpZmllciI6IkQ1MzAzMzQ4MkUxNkIwQ0QwMEU4MzQxRiIsImJsdWVwcmludF9wcm92aWRlckZpbGVQYXRoU3RyaW5nIjoiXC9Vc2Vyc1wvcnViZW5yZXV0XC9Nb21lbnR1bVwvTW9tZW50dW1cL01vbWVudHVtLnhjb2RlcHJvaiIsInR5cGUiOnsiYmx1ZXByaW50Ijp7fX19
note: Disabling previews because SWIFT_VERSION is set and SWIFT_OPTIMIZATION_LEVEL=-O, expected -Onone (in target 'Momentum' from project 'Momentum')
note: Disabling previews because SWIFT_VERSION is set and SWIFT_OPTIMIZATION_LEVEL=-O, expected -Onone (in target 'MomentumWidgetExtension' from project 'Momentum')
** BUILD FAILED **
